version: '3.8'

services:
  sentinel:
    build: .
    container_name: sentinel-proxy
    ports:
      - "8080:8080"   # HTTP
      - "8443:8443"   # HTTPS
      - "8081:8081"   # Health check
      - "8082:8082"   # Metrics
    volumes:
      - ./config:/app/config:ro
      - ./certs:/app/certs:ro
    environment:
      - TZ=UTC
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - sentinel-network

  # Example upstream services for testing
  api-service-1:
    image: nginx:alpine
    container_name: api-service-1
    ports:
      - "3001:80"
    volumes:
      - ./test/nginx-api-1.conf:/etc/nginx/nginx.conf:ro
    environment:
      - SERVICE_NAME=api-service-1
    networks:
      - sentinel-network

  api-service-2:
    image: nginx:alpine
    container_name: api-service-2
    ports:
      - "3002:80"
    volumes:
      - ./test/nginx-api-2.conf:/etc/nginx/nginx.conf:ro
    environment:
      - SERVICE_NAME=api-service-2
    networks:
      - sentinel-network

  web-service-1:
    image: nginx:alpine
    container_name: web-service-1
    ports:
      - "4001:80"
    volumes:
      - ./test/nginx-web-1.conf:/etc/nginx/nginx.conf:ro
    environment:
      - SERVICE_NAME=web-service-1
    networks:
      - sentinel-network

  web-service-2:
    image: nginx:alpine
    container_name: web-service-2
    ports:
      - "4002:80"
    volumes:
      - ./test/nginx-web-2.conf:/etc/nginx/nginx.conf:ro
    environment:
      - SERVICE_NAME=web-service-2
    networks:
      - sentinel-network

  static-service:
    image: nginx:alpine
    container_name: static-service
    ports:
      - "5001:80"
    volumes:
      - ./test/nginx-static.conf:/etc/nginx/nginx.conf:ro
      - ./test/static:/usr/share/nginx/html:ro
    environment:
      - SERVICE_NAME=static-service
    networks:
      - sentinel-network

  # Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: sentinel-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sentinel-network

  grafana:
    image: grafana/grafana:latest
    container_name: sentinel-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - sentinel-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  sentinel-network:
    driver: bridge 